@page "/fetchdata"
@inject HttpClient Http
@using api_415.Libs

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
<p><em>Loading...</em></p>
}
else
{
<EditForm Model="@forecasts" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td><NavLink href="@($"/Edit/{forecast.Id}")">@forecast.Id</NavLink></td>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td><InputText @bind-Value="@forecast.Summary"/></td>
                </tr>
            }
                <button class="btn btn-primary" type="submit">Save</button>
        </tbody>
    </table>
</EditForm>
}

@code {
    List<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetJsonAsync<List<WeatherForecast>>("https://localhost:5003/WeatherForecast/");
    }
    private async Task HandleValidSubmit()
    {
        await Http.PostJsonAsync("https://localhost:5003/WeatherForecast/", forecasts);
    }
}
